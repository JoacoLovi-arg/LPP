#PAUTAS DE R

#objetos
A <-1

B <- A + 1 #operadores aritmeticos (+, -, *, /)

A < B #operadores logicos (<, >, <=, >=, ==, !=)

#funciones basicas
C <- paste("Laboratorio", "de", "Politicas", "publicas", sep = " ")
paste0(A, B)
1:5
sum(1:5)
mean(1:5, rm = TRUE)

# se usa para hacer comentarios, espacios en blanco y enters son para visualizar
# mejor (no impacta en el codigo), [corchetes] y $ son metodos para acceder a
# objetos, (parentesis) es para definir parametros de una función, comas, es para 
# separar parametros dentro de una funcion

#valores
class(A)
class(C)

#vector
D <- c(1,2,3)

E <- D + 2

G <- c("Carlos","Maria","Juan","Victoria")

elementoG <- G[3]

#dataframe

HORARIO <- c("7 a 9", "9 a 11", "11 a 13")
MATERIA <- c("fundamentos", "TeoPol", "Economia")
PROFESOR <- c("Ana", "Lucas", "Victoria")

Oferta.Academica <- data.frame(HORARIO, MATERIA, PROFESOR)

#bosrrar objetos
rm(A, B, C, D, E, G, elementoG, HORARIO, MATERIA, PROFESOR, Oferta.Academica)


#INSTALAMOS PAQUETES
#es necesario instalar y activar los paquetes. es recomendable hacerlo cada vez
#que se van a usar para actualizarlos

install.packages("tidyverse")
install.packages("openxlsx")
install.packages("ggplot2")

#ACTIVAMOS PAQUETES

library(tidyverse)
library(openxlsx)
library(ggplot2)

#CARGAMOS BASES

individual318 <- read.table("usu_individual_t318.txt", sep = ";", dec = ",", 
                            header = TRUE, fill = TRUE)

#MERCADO DE TRABAJO
Poblacion_ocupados <- individual318%>%
  summarise(Poblacion = sum(PONDERA),
            Ocupados = sum(PONDERA [ESTADO == 1]))
Poblacion_ocupados

Tasa_Empleo <- individual318%>%
  summarise(Poblacion = sum(PONDERA),
            Ocupados = sum(PONDERA [ESTADO == 1]),
            TasaEmpleo = Ocupados/Poblacion)
Tasa_Empleo

Tasa_Empleo %>% 
  select(-(1:2)) %>% 
  mutate(TasaEmpleo = sprintf("%1.1f%%", 100*TasaEmpleo))

#Cuadro 1.1. Principales indicadores
Cuadro_1.1a318 <- individual318 %>% 
  summarise(Poblacion         = sum(PONDERA),
            Ocupados          = sum(PONDERA[ESTADO == 1]),
            Desocupados       = sum(PONDERA[ESTADO == 2]),
            PEA               = Ocupados + Desocupados,
            Ocupados_demand   = sum(PONDERA[ESTADO == 1 & PP03J ==1]),
            Suboc_demandante  = sum(PONDERA[ESTADO == 1 & INTENSI ==1 & PP03J==1]),
            Suboc_no_demand   = sum(PONDERA[ESTADO == 1 & INTENSI ==1 & PP03J %in% c(2,9)]),
            Subocupados       = Suboc_demandante + Suboc_no_demand ,
            'Tasa Actividad'                  = PEA/Poblacion,
            'Tasa Empleo'                     = Ocupados/Poblacion,
            'Tasa Desocupacion'               = Desocupados/PEA,
            'Tasa ocupados demandantes'       = Ocupados_demand/PEA,
            'Tasa Subocupación'               = Subocupados/PEA,
            'Tasa Subocupación demandante'    = Suboc_demandante/PEA,
            'Tasa Subocupación no demandante' = Suboc_no_demand/PEA)
Cuadro_1.1a318 

Cuadro_1.1b318<-Cuadro_1.1a318%>%
  select(-c(1:8))%>%
  gather(Tasas, Valor, 1:ncol(.))%>%
  mutate(Valor=sprintf("%1.1f%%", 100*Valor))
Cuadro_1.1b318

write.xlsx(Cuadro_1.1b318,"Cuadro 1.1 318.xlsx")

#Cuadro 1.2.Principales indicadores segun sexo.
Cuadro_1.2a318 <- individual318 %>%
  group_by(CH04) %>% 
  summarise(Poblacion         = sum(PONDERA),
            Ocupados          = sum(PONDERA[ESTADO == 1]),
            Desocupados       = sum(PONDERA[ESTADO == 2]),
            PEA               = Ocupados + Desocupados,
            Ocupados_demand   = sum(PONDERA[ESTADO == 1 & PP03J == 1]),
            Suboc_demandante  = sum(PONDERA[ESTADO == 1 & INTENSI == 1 & PP03J == 1]),
            Suboc_no_demand   = sum(PONDERA[ESTADO == 1 & INTENSI == 1 & PP03J %in% c(2, 9)]),
            Subocupados       = Suboc_demandante + Suboc_no_demand,
            'Tasa Actividad'                  = PEA/Poblacion,
            'Tasa Empleo'                     = Ocupados/Poblacion,
            'Tasa Desocupacion'               = Desocupados/PEA,
            'Tasa ocupados demandantes'       = Ocupados_demand/PEA,
            'Tasa Subocupación'               = Subocupados/PEA,
            'Tasa Subocupación demandante'    = Suboc_demandante/PEA,
            'Tasa Subocupación no demandante' = Suboc_no_demand/PEA)
Cuadro_1.2a318

Cuadro_1.2b318<-Cuadro_1.2a318%>%
  select(-c(2:9))%>%
  mutate(SEXO=case_when(CH04==1~"Varon",
                        CH04==2~"Mujer"))%>%
  select(SEXO,everything(.),-CH04)
#FALTA RESOLVER PRESENTACION
Cuadro_1.2b318

write.xlsx(Cuadro_1.3b318,"Cuadro 1.3 318.xlsx")


#POBREZA E INDIGENCIA

#Vamos a comparar cuatro trimestres. los dos ultimos del 2017 y los dos primeros
#del 2018

individual317 <- read.table("usu_individual_t317.txt", sep = ";", dec = ",", 
                            header = TRUE, fill = TRUE)
individual417 <- read.table("usu_individual_t417.txt", sep = ";", dec = ",", 
                            header = TRUE, fill = TRUE)
individual118 <- read.table("usu_individual_t118.txt", sep = ";", dec = ",", 
                            header = TRUE, fill = TRUE)
individual218 <- read.table("usu_individual_t218.txt", sep = ";", dec = ",", 
                            header = TRUE, fill = TRUE)

#para poder comparar los trimestres tenemos que juntar los 4 dataset en un
#solo dataframe

Bases <- bind_rows(individual317,
                   individual417,
                   individual118,
                   individual218)

#Tambien tenemos que cargar tablas complementarias de canastas basica total y 
#canasta basica alimentaria
CBA<-read.xlsx("CANASTAS.xlsx",sheet = "CBA")

CBT<-read.xlsx("CANASTAS.xlsx", sheet = "CBT")

#diccionario de regiones
dic.regiones<-read.xlsx("Regiones.xlsx")

# y tabla de adulto equivalente
adequi<-read.xlsx("ADEQUI.xlsx")

#Armamos una tabla con las canastas basicas totales y alimentarias 
#por region y trimestre
CBA <- CBA %>% 
  mutate(Canasta = 'CBA')
CBT <- CBT %>% 
  mutate(Canasta = 'CBT')
Canastas_Reg <- bind_rows(CBA,CBT)%>% 
  gather(.,Region, Valor, c(3:(ncol(.)-1) ))%>%
  mutate(Trimestre = case_when(Mes %in% c(1:3)   ~1,
                               Mes %in% c(4:6)   ~2,
                               Mes %in% c(7:9)   ~3,
                               Mes %in% c(10:12) ~4),
         Periodo = paste(Año, Trimestre, sep='.'))      
Canastas_Reg

#Ahora promediamos las canastas de un mismo trimestre y agregamos el codigo
#de la region
Canastas_Reg_2 <- Canastas_Reg %>% 
  group_by(Canasta, Region, Periodo)%>% 
  summarise(Valor = mean(Valor))%>% 
  spread(., Canasta,Valor)%>% 
  left_join(., dic.regiones, by = "Region")%>% 
  ungroup()                                              
Canastas_Reg_2

#Incorporamos a cada registro de la base total la Unidad de Adulto Equivalente
#macheando por sexo y edad
Pobreza_individual <- Bases %>%
  mutate(Periodo= paste(ANO4,TRIMESTRE,sep=".")) %>%
  left_join(., adequi, by= c("CH04","CH06")) %>%
  left_join(., Canastas_Reg_2, by= c("REGION","Periodo"))
Pobreza_individual

#Calculamos la Unidad de adulto equivalente por hogar
Pobreza_Individual_paso2 <- Pobreza_individual %>%  
  group_by(CODUSU, NRO_HOGAR, Periodo) %>% 
  mutate(Adequi_hogar = sum(adequi)) %>%
  ungroup()                                                      
Pobreza_Individual_paso2
#En base a la Unidad de Adulto Equivalente de cada individuo calculamos el valor
#que delimitan lineas de pobreza e indigencia y luego realizamos comparacion 
#logica entre ingreso total fliar y las canastas para asignarle su situacion 
#a cada individuo
Pobreza_Individual_paso3 <-  Pobreza_Individual_paso2 %>% 
  mutate(CBA = CBA*Adequi_hogar,
         CBT = CBT*Adequi_hogar,
         Situacion = case_when(ITF<CBA            ~ 'Indigente',
                               ITF>=CBA & ITF<CBT ~ 'Pobre',
                               ITF>=CBT           ~ 'No.Pobre'))  
Pobreza_Individual_paso3

#CALCULO LAS TASAS DE POBREZA E INDIGENCIA
#conteo de casos segun situacion utilizando el ponderador PONDIH
Pobreza_resumen <- Pobreza_Individual_paso3 %>% 
  group_by(Periodo) %>% 
  summarise(Tasa_pobreza= sum(PONDIH[Situacion %in% c('Pobre', 'Indigente')],na.rm = TRUE)/
              sum(PONDIH,na.rm = TRUE),
            Tasa_indigencia= sum(PONDIH[Situacion == 'Indigente'],na.rm = TRUE)/
              sum(PONDIH,na.rm = TRUE))%>%
  mutate(Tasa_pobreza = sprintf("%1.1f%%", 100*Tasa_pobreza),
         Tasa_indigencia = sprintf("%1.1f%%", 100*Tasa_indigencia))
Pobreza_resumen

#Graficamos la evolucion de la pobreza y la indigencia de los trimestres relevados
ggplot(Pobreza_resumen,aes(x=Periodo, y=Tasa_pobreza,group=1))+
  geom_point(size=1)+
  geom_line(size=0.5)+
  labs(x="Trimestre",y="Tasa de Pobreza",
       title = "Evolucion de la tasa de pobreza",
       subtitle = "Serie 3er trimestre 2017 - 2er trimestre 2018",
       caption = "FUENTE: elaboración propia a partir de microdato EPH - INDEC")


#EJERCICIOS

##1# crear un vector llamado variables que contenga las variable de interes para
##   el ejercicio: edad, sexo, ingresos de la ocupacion principal, categoria
##   ocupacional, ESTADO, PONDERA, PONDIH (usar diseño de la EPH)

##2# Acortar la base unicamente a las variables de interes utilizando el 
##   vector "Variables" (funcion select)

##3# Calcular tasa de actividad, empleo y desempleo para jovenes de entre
##   18 y 35 años (funcion filter con condicion logica)

##4# calcular el porcentaje de pobreza segun hombres y mujeres (funcion group_by)

##5# carlcular el porcentaje de pobreza por region (funcion group_by)